; Android-like 'quick settings' menu
(defwidget settings []
  (eventbox
    ; WORKAROUND
    ; There is a bug in eww 0.6.0 that makes it necessary to open windows before updating relevant variables.
    ; This has been unexpectedly fixed in a pr but downstream must wait for a version bump before getting this fix.
    ; See here if you're interested in reading more: https://github.com/elkowar/eww/issues/1192
    :onclick "${EWW_CMD} open settings_menu --toggle && eww-volume update-slider && eww-brightness update-slider"
    :cursor "pointer"
    ; WORKAROUND
    ; for some reason, putting the 󰇘 icon directly inside an eventbox causes it to be cut off
    ; but placing it inside a box inside a box inside an eventbox does not cause this issue
    (box
      :class "widgets"
      :halign "end"
      (box
        "󰇘"))))

(defwindow settings_menu
  :monitor 0
  :exclusive false
  :stacking "overlay"
  :geometry (geometry
             ; size of tiling window gaps
             :x 4
             :y 4
             :anchor "top right")
  (eventbox
    ; :onhoverlost "${EWW_CMD} close settings_menu && ${EWW_CMD} update volume_value_slider=${volume_value_label}"
    :onhoverlost "${EWW_CMD} close settings_menu"
    :timeout 500
    (box
      :class "popup"
      :orientation "v"
      :space-evenly false
      (box :orientation "h"
        (box :orientation "v"
          (sync)
          (dnd)
          (button :class "button_disabled" "something else")) ; blueooth?
        (box :orientation "v"
         (vpn)
         (nightlight)
         (caffeine)))
      (controls))))

; WIP
; This was originally copied from https://github.com/PoSayDone/.dotfiles_new/blob/main/files/eww/actions/actions.yuck#L153
; https://www.reddit.com/r/unixporn/comments/ygn0s5/bspwm_updated_my_rice_with_new_eww_bar_and/
; but I am modifying it so heavily that it's not quite the same widget as PoSayDone's.

; We store the value of the slider in a separate variable
; and then simply update this to be equal to the label value when we close the settings menu.
; This is because, if the slider is constantly setting its own value by updating a variable,
; this can lead to a delay that causes the slider to bounce up and down.
(defvar volume_value_label 100)
(defvar volume_value_slider 100)
(defvar volume_icon "")
(defvar brightness_value_label 100)
(defvar brightness_value_slider 100)
(defvar brightness_icon "󰃠")
(defwidget controls []
  (box
       :orientation "v"
       :space-evenly false
    (box
         :space-evenly false
         :class "slider active"
      (label
        :class "volume"
        :text volume_icon)
      (scale :value volume_value_slider
             :hexpand true
             :onchange "eww-volume {}%"
             :timeout 400
             :min 0
             :max 101)
      (label
        :class "scale-label"
        :text "${volume_value_label}%"))
    (box
         :space-evenly false
         :class "slider active"
      (label :class "brightness"
            :text brightness_icon)
      (scale
             :value brightness_value_slider
             :hexpand true
             :onchange "eww-brightness {}"
             :min 0
             :max 101)
      (label :class "scale-label"
           :text "${brightness_value_label}%"))))

; TODO: syncthing
(defvar sync_toggle false)
(defwidget sync []
  (eventbox
    :cursor "pointer"
    (button
          :class {sync_toggle ? "button_enabled" : "button_disabled"}
          :onclick "${EWW_CMD} update sync_toggle=${!sync_toggle} && notify-send 'Sync' 'COMING SOON'"
          "\  Device syncing")))

; COMPLETE
(defvar dnd_toggle false)
(defwidget dnd []
  (eventbox
    :cursor "pointer"
    (button
      :class {dnd_toggle ? "button_enabled" : "button_disabled"}
      :onclick "${EWW_CMD} update dnd_toggle=${!dnd_toggle} && makoctl mode -t dnd"
      "󰍷\  Do Not Disturb")))

; COMPLETE
(defvar caffeine_toggle false)
(defwidget caffeine []
  (eventbox
      :cursor "pointer"
      (button
        :class {caffeine_toggle ? "button_enabled" : "button_disabled"}
        :onclick "${EWW_CMD} update caffeine_toggle=${!caffeine_toggle} && eww-service hypridle"
        "󰛊\  Caffeine")))

; WIP
(defvar nightlight_toggle true)
(defwidget nightlight []
  (eventbox
      :cursor "pointer"
      (button
        :class {nightlight_toggle ? "button_enabled" : "button_disabled"}
        :onclick "${EWW_CMD} update nightlight_toggle=${!nightlight_toggle} && eww-service wlsunset"
        :tooltip "19:00-06:00"
        "\  Nightlight")))

; TODO: wireguard
(defvar vpn_toggle true)
(defwidget vpn []
  (eventbox
      :cursor "pointer"
      (button
        :class {vpn_toggle ? "button_enabled" : "button_disabled"}
        :onclick "${EWW_CMD} update vpn_toggle=${!vpn_toggle} && eww-mullvad"
        " \  VPN")))

; TODO: open issue about
; (defwidget settings_button [button_toggle button_command button_text]
;   (button
;     :class {button_toggle ? "button_disabled" : "button_enabled"}
;     :onclick "${button_command} && ${EWW_CMD} update button_toggle=${!button_toggle}"
;     "${button_text}"))

;
; TODO: add brightness and volume sliders at the bottom of settings menu?
; to get volume: `wpctl get-volume @DEFAULT_AUDIO_SINK@`
